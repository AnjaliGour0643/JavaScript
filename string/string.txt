1. String Declaration: Strings can be declared using single quotes (' '), double quotes (" "), or backticks (` for template literals).

let str1 = "Hello";
let str2 = 'World';
let str3 = `Hello ${str2}`;


2. String Immutability: Strings are immutable in JavaScript, meaning once created, they cannot be changed. 
Operations like concat() create a new string.

3. String Length: The length property returns the number of characters in a string.

let str = "JavaScript";
console.log(str.length); // Output: 10

4. Accessing Characters: You can access individual characters in a string using charAt() or bracket notation ([ ]).

let str = "Hello";
console.log(str.charAt(1));  // Output: "e"
console.log(str[1]);         // Output: "e"

5. String Concatenation: Strings can be concatenated using + operator or concat() method.

let str1 = "Hello";
let str2 = "World";
let result = str1 + " " + str2;   // "Hello World"


6. Template Literals: Introduced in ES6, template literals allow embedding variables and expressions inside strings using backticks (`) and ${}.

let name = "John";
let greeting = `Hello, ${name}!`; // "Hello, John!"


7. Escape Sequences: Special characters like newline (\n), tab (\t), backslash (\\), and quotes (\', \") can be used inside strings.

let str = "This is a new line \n and a tab \t in the string.";


8. String Comparison: Strings can be compared using the == or === operators, with Unicode values being used for comparison.

console.log("abc" > "abd");  // Output: false

----------------------------------------------------------------
9. Common Methods: JavaScript strings have many built-in methods:

slice(), substring(), substr() for extracting parts of strings.
toUpperCase(), toLowerCase() for changing case.
trim(), trimStart(), trimEnd() for removing whitespace.
replace(), replaceAll() for replacing parts of strings.
split() for converting a string into an array.

10. Search Methods: Strings have several search methods:

indexOf(), lastIndexOf(), includes() for finding substrings.
startsWith(), endsWith() for checking the start or end of a string.
match(), search() for regular expression-based searches.